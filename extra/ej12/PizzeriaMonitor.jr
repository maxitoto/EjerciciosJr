/* This JR file was generated by m2jr */
/* for the signal and urgent wait signaling discipline */


// PizzeriaMonitor.m, line 1: _monitor PizzeriaMonitor {

class PizzeriaMonitor {
  sem m_mutex = 1;
  sem m_urgentq = 0;
  int m_n_urgentq = 0;
  String m_name;
  public PizzeriaMonitor(String n) {
    this.m_name = n;
  }
  private void m_next() {
      if (m_n_urgentq > 0) {
        m_n_urgentq--;
        V(m_urgentq);
      }
      else {
        V(m_mutex);
      }
  }

// PizzeriaMonitor.m, line 2: 


// PizzeriaMonitor.m, line 3: 


// PizzeriaMonitor.m, line 4:     _var boolean hay_queso = false;

private boolean
hay_queso
=false
;
// PizzeriaMonitor.m, line 5:     _var boolean hay_salsa = false;

private boolean
hay_salsa
=false
;
// PizzeriaMonitor.m, line 6:     _var boolean hay_morron = false;

private boolean
hay_morron
=false
;
// PizzeriaMonitor.m, line 7: 


// PizzeriaMonitor.m, line 8: 


// PizzeriaMonitor.m, line 9:     _condvar queso_listo;


// PizzeriaMonitor.m, line 10:     _condvar queso;

private m_condvar queso_listo = new m_condvar("queso_listo");

// PizzeriaMonitor.m, line 11: 


// PizzeriaMonitor.m, line 12:     _condvar salsa_lista;

private m_condvar queso = new m_condvar("queso");

// PizzeriaMonitor.m, line 13:     _condvar salsa;

private m_condvar salsa_lista = new m_condvar("salsa_lista");

// PizzeriaMonitor.m, line 14: 


// PizzeriaMonitor.m, line 15:     _condvar morron_listo;

private m_condvar salsa = new m_condvar("salsa");

// PizzeriaMonitor.m, line 16:     _condvar morron;

private m_condvar morron_listo = new m_condvar("morron_listo");

// PizzeriaMonitor.m, line 17: 


// PizzeriaMonitor.m, line 18:     _proc void preparar_ingrediente(String ingrediente) {

private m_condvar morron = new m_condvar("morron");
public
void
preparar_ingrediente
(String
ingrediente
){
    op void m_return_from_wait();
    P(m_mutex);

// PizzeriaMonitor.m, line 19:         if (ingrediente == "queso") {

if
(ingrediente
=="queso"){
// PizzeriaMonitor.m, line 20:             hay_queso = true;

hay_queso
=true
;
// PizzeriaMonitor.m, line 21:             _signal(queso_listo);

{m_n_urgentq++;if ((queso_listo ).m_signal()) {
  P(m_urgentq);
}
else {
  m_n_urgentq--;
}
}

// PizzeriaMonitor.m, line 22:             _wait(queso);

{  m_condvar m_cv = (queso );
  send m_cv.m_wait(m_return_from_wait,0);
  send m_cv.m_wait_ranks(0);
  m_next();
  P(m_return_from_wait);
}
// PizzeriaMonitor.m, line 23:         } else if (ingrediente == "salsa"){

}else
if
(ingrediente
=="salsa"){
// PizzeriaMonitor.m, line 24:             hay_salsa = true;

hay_salsa
=true
;
// PizzeriaMonitor.m, line 25:             _signal(salsa_lista);

{m_n_urgentq++;if ((salsa_lista ).m_signal()) {
  P(m_urgentq);
}
else {
  m_n_urgentq--;
}
}

// PizzeriaMonitor.m, line 26:             _wait(salsa);

{  m_condvar m_cv = (salsa );
  send m_cv.m_wait(m_return_from_wait,0);
  send m_cv.m_wait_ranks(0);
  m_next();
  P(m_return_from_wait);
}
// PizzeriaMonitor.m, line 27:         } else {

}else
{
// PizzeriaMonitor.m, line 28:             hay_morron = true;

hay_morron
=true
;
// PizzeriaMonitor.m, line 29:             _signal(morron_listo);

{m_n_urgentq++;if ((morron_listo ).m_signal()) {
  P(m_urgentq);
}
else {
  m_n_urgentq--;
}
}

// PizzeriaMonitor.m, line 30:             _wait(morron);

{  m_condvar m_cv = (morron );
  send m_cv.m_wait(m_return_from_wait,0);
  send m_cv.m_wait_ranks(0);
  m_next();
  P(m_return_from_wait);
}
// PizzeriaMonitor.m, line 31:         }


// PizzeriaMonitor.m, line 32:     }

}
// PizzeriaMonitor.m, line 33: 


// PizzeriaMonitor.m, line 34:     _proc void solicitar_ingrediente(String ingrediente) {

  m_next();
}
public
void
solicitar_ingrediente
(String
ingrediente
){
    op void m_return_from_wait();
    P(m_mutex);

// PizzeriaMonitor.m, line 35:         if (ingrediente == "queso") {

if
(ingrediente
=="queso"){
// PizzeriaMonitor.m, line 36:             if (hay_queso) {

if
(hay_queso
){
// PizzeriaMonitor.m, line 37:                 hay_queso = false;

hay_queso
=false
;
// PizzeriaMonitor.m, line 38:                 _signal(queso);

{m_n_urgentq++;if ((queso ).m_signal()) {
  P(m_urgentq);
}
else {
  m_n_urgentq--;
}
}

// PizzeriaMonitor.m, line 39:             } else {

}else
{
// PizzeriaMonitor.m, line 40:                 _wait(queso_listo);

{  m_condvar m_cv = (queso_listo );
  send m_cv.m_wait(m_return_from_wait,0);
  send m_cv.m_wait_ranks(0);
  m_next();
  P(m_return_from_wait);
}
// PizzeriaMonitor.m, line 41:                 hay_queso = false;

hay_queso
=false
;
// PizzeriaMonitor.m, line 42:                 _signal(queso);

{m_n_urgentq++;if ((queso ).m_signal()) {
  P(m_urgentq);
}
else {
  m_n_urgentq--;
}
}

// PizzeriaMonitor.m, line 43:             }


// PizzeriaMonitor.m, line 44:         } else if (ingrediente == "salsa") {

}}else
if
(ingrediente
=="salsa"){
// PizzeriaMonitor.m, line 45:             if (hay_salsa) {

if
(hay_salsa
){
// PizzeriaMonitor.m, line 46:                 hay_salsa = false;

hay_salsa
=false
;
// PizzeriaMonitor.m, line 47:                 _signal(salsa);

{m_n_urgentq++;if ((salsa ).m_signal()) {
  P(m_urgentq);
}
else {
  m_n_urgentq--;
}
}

// PizzeriaMonitor.m, line 48:             } else {

}else
{
// PizzeriaMonitor.m, line 49:                 _wait(salsa_lista);

{  m_condvar m_cv = (salsa_lista );
  send m_cv.m_wait(m_return_from_wait,0);
  send m_cv.m_wait_ranks(0);
  m_next();
  P(m_return_from_wait);
}
// PizzeriaMonitor.m, line 50:                 hay_salsa = false;

hay_salsa
=false
;
// PizzeriaMonitor.m, line 51:                 _signal(salsa);

{m_n_urgentq++;if ((salsa ).m_signal()) {
  P(m_urgentq);
}
else {
  m_n_urgentq--;
}
}

// PizzeriaMonitor.m, line 52:             }


// PizzeriaMonitor.m, line 53:         } else {

}}else
{
// PizzeriaMonitor.m, line 54:             if (hay_morron) {

if
(hay_morron
){
// PizzeriaMonitor.m, line 55:                 hay_morron = false;

hay_morron
=false
;
// PizzeriaMonitor.m, line 56:                 _signal(morron);

{m_n_urgentq++;if ((morron ).m_signal()) {
  P(m_urgentq);
}
else {
  m_n_urgentq--;
}
}

// PizzeriaMonitor.m, line 57:             } else {

}else
{
// PizzeriaMonitor.m, line 58:                 _wait(morron_listo);

{  m_condvar m_cv = (morron_listo );
  send m_cv.m_wait(m_return_from_wait,0);
  send m_cv.m_wait_ranks(0);
  m_next();
  P(m_return_from_wait);
}
// PizzeriaMonitor.m, line 59:                 hay_morron = false;

hay_morron
=false
;
// PizzeriaMonitor.m, line 60:                 _signal(morron);

{m_n_urgentq++;if ((morron ).m_signal()) {
  P(m_urgentq);
}
else {
  m_n_urgentq--;
}
}

// PizzeriaMonitor.m, line 61:             }


// PizzeriaMonitor.m, line 62:         }

}
// PizzeriaMonitor.m, line 63:     }

}
// PizzeriaMonitor.m, line 64: }
  m_next();
}
}
