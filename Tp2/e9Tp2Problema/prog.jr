import edu.ucdavis.jr.JR;
    
public class prog{
    private static final int N = 5;
    private static cap void ()palillos[] = new cap void()[N];//arreglo de semaforos "cap" que sera cap, no lo se
    
    
    static op void comer(int t){
        try{System.out.println("COMER");Thread.sleep(t);}catch(Exception e){}
    }

    static op void pensar(int t){
        try{System.out.println("PENSAR");Thread.sleep(t);}catch(Exception e){}
    }
    //nota: es posible ver el valor de los semaforos con semaforo.length();
    static process filosofo((int i = 0; i<N; i++)){
        try{Thread.sleep(2000);}catch(Exception e){}
        while(true){
            P(palillos[i]);
                P(palillos[(i+1) % N]);
                    comer((int)(Math.random()*2000));
                P(palillos[i]);
                 P(palillos[(i+1) % N]);
                    pensar((int)(Math.random()*2000));
        }//queda en deadlock
    }

    public static void main(String[] args){
        for(int i = 0; i<N; i++){//inicializacion del arreglo con semaforos
            palillos[i] = new sem(1);
        }
        prog p = new prog();
    }
}



