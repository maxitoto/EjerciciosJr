/* This JR file was generated by m2jr */
/* for the signal and wait signaling discipline */


// Monitor.m, line 1: _monitor Monitor{

class Monitor {
  sem m_mutex = 1;
  sem m_urgentq = 0;
  int m_n_urgentq = 0;
  String m_name;
  public Monitor(String n) {
    this.m_name = n;
  }
  private void m_next() {
      if (m_n_urgentq > 0) {
        m_n_urgentq--;
        V(m_urgentq);
      }
      else {
        V(m_mutex);
      }
  }

// Monitor.m, line 2: 


// Monitor.m, line 3:     private static final int recursosTotales = 10;

private
static
final
int
recursosTotales
=10;
// Monitor.m, line 4:     _var int recursosNoAsignados = recursosTotales;

private int
recursosNoAsignados
=recursosTotales
;
// Monitor.m, line 5:     _var int recursosAsigandos = 0;

private int
recursosAsigandos
=0;
// Monitor.m, line 6: 


// Monitor.m, line 7:     _condvar recursosDisponibles;


// Monitor.m, line 8: 


// Monitor.m, line 9:     _proc void solicitarRecursos(int i){

private m_condvar recursosDisponibles = new m_condvar("recursosDisponibles");
public
void
solicitarRecursos
(int
i
){
    op void m_return_from_wait();
    P(m_mutex);

// Monitor.m, line 10:         if(recursosAsigandos==recursosTotales){

if
(recursosAsigandos
==recursosTotales
){
// Monitor.m, line 11:             System.out.println("sistema ["+recursosNoAsignados+"|"+recursosAsigandos+"] no cuenta con recursos suficientes el proceso "+i+" debe espera");

System
.out
.println
("sistema ["+recursosNoAsignados
+"|"+recursosAsigandos
+"] no cuenta con recursos suficientes el proceso "+i
+" debe espera");
// Monitor.m, line 12:             _wait(recursosDisponibles);

{  m_condvar m_cv = (recursosDisponibles );
  send m_cv.m_wait(m_return_from_wait,0);
  send m_cv.m_wait_ranks(0);
  m_next();
  P(m_return_from_wait);
}
// Monitor.m, line 13:         }


// Monitor.m, line 14: 


// Monitor.m, line 15:         recursosAsigandos+=2;

}recursosAsigandos
+=2;
// Monitor.m, line 16:         recursosNoAsignados-=2;

recursosNoAsignados
-=2;
// Monitor.m, line 17:         System.out.println("El proceso "+i+" obtuvo 2 recursos| estado del sistema ["+recursosNoAsignados+"|"+recursosAsigandos+"]");

System
.out
.println
("El proceso "+i
+" obtuvo 2 recursos| estado del sistema ["+recursosNoAsignados
+"|"+recursosAsigandos
+"]");
// Monitor.m, line 18:     }


// Monitor.m, line 19: 


// Monitor.m, line 20:     _proc void devolverRecursos(int i){

  m_next();
}
public
void
devolverRecursos
(int
i
){
    op void m_return_from_wait();
    P(m_mutex);

// Monitor.m, line 21:         recursosAsigandos-=2;

recursosAsigandos
-=2;
// Monitor.m, line 22:         recursosNoAsignados+=2;

recursosNoAsignados
+=2;
// Monitor.m, line 23:         System.out.println("El proceso "+i+" devulve 2 recursos| estado del sistema ["+recursosNoAsignados+" | "+recursosAsigandos+"]");

System
.out
.println
("El proceso "+i
+" devulve 2 recursos| estado del sistema ["+recursosNoAsignados
+" | "+recursosAsigandos
+"]");
// Monitor.m, line 24:         _signal(recursosDisponibles);

{ if ((recursosDisponibles ).m_signal()) {
  P(m_mutex);
}}

// Monitor.m, line 25:     }


// Monitor.m, line 26: }
  m_next();
}
}
